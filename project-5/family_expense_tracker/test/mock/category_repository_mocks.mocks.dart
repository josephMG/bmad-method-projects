// Mocks generated by Mockito 5.4.6 from annotations
// in family_expense_tracker/test/mock/category_repository_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:family_expense_tracker/data/models/category.dart' as _i4;
import 'package:family_expense_tracker/data/repositories/category_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i2.CategoryRepository {
  MockCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Category>> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i3.Future<List<_i4.Category>>.value(<_i4.Category>[]),
          )
          as _i3.Future<List<_i4.Category>>);

  @override
  _i3.Future<void> updateCategory(_i4.Category? category) =>
      (super.noSuchMethod(
            Invocation.method(#updateCategory, [category]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteCategory(String? categoryId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCategory, [categoryId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateExpensesCategory(
    String? oldCategoryId,
    String? newCategoryId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateExpensesCategory, [
              oldCategoryId,
              newCategoryId,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isCategoryUsed(String? categoryId) =>
      (super.noSuchMethod(
            Invocation.method(#isCategoryUsed, [categoryId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
